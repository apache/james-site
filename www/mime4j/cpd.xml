<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="8" tokens="306">
<file line="131" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java"/>
<file line="94" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java"/>
<codefragment>
<![CDATA[
    private static final byte[] base64ToInt = {
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54,
            55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4,
            5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
            24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
]]>
</codefragment>
</duplication>
<duplication lines="5" tokens="198">
<file line="139" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java"/>
<file line="143" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java"/>
<codefragment>
<![CDATA[
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xB0 */
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xC0 */
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xD0 */
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xE0 */
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1     /* 0xF0 */
]]>
</codefragment>
</duplication>
<duplication lines="20" tokens="132">
<file line="44" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java"/>
<file line="46" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java"/>
<codefragment>
<![CDATA[
    public void append(final char[] b, int off, int len) {
        if (b == null) {
            return;
        }
        if ((off < 0) || (off > b.length) || (len < 0) ||
                ((off + len) < 0) || ((off + len) > b.length)) {
            throw new IndexOutOfBoundsException();
        }
        if (len == 0) {
            return;
        }
        int newlen = this.len + len;
        if (newlen > this.buffer.length) {
            expand(newlen);
        }
        System.arraycopy(b, off, this.buffer, this.len, len);
        this.len = newlen;
    }
    
    public void append(String str) {
]]>
</codefragment>
</duplication>
<duplication lines="12" tokens="131">
<file line="33" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64Encoder.java"/>
<file line="71" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java"/>
<codefragment>
<![CDATA[
    private static final byte[] intToBase64 = {
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
            'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
            'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'
    };

    /**
     * Byte used to pad output.
     */
    private static final byte PAD = '=';
]]>
</codefragment>
</duplication>
<duplication lines="4" tokens="129">
<file line="132" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java"/>
<file line="139" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java"/>
<codefragment>
<![CDATA[
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, /* 0x70 */
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0x80 */
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0x90 */
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xA0 */
]]>
</codefragment>
</duplication>
<duplication lines="17" tokens="128">
<file line="72" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java"/>
<file line="101" path="/home/oleg/temp/apache-mime4j-0.5/src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java"/>
<codefragment>
<![CDATA[
    public void append(final byte[] b, int off, int len) {
        if (b == null) {
            return;
        }
        if ((off < 0) || (off > b.length) || (len < 0) ||
                ((off + len) < 0) || ((off + len) > b.length)) {
            throw new IndexOutOfBoundsException();
        }
        if (len == 0) {
            return;
        }
        int oldlen = this.len;
        int newlen = oldlen + len;
        if (newlen > this.buffer.length) {
            expand(newlen);
        }
        for (int i1 = off, i2 = oldlen; i2 < newlen; i1++, i2++) {
]]>
</codefragment>
</duplication>
</pmd-cpd>